#!/bin/bash


#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

# Ctrl + C

function ctrl_c(){
	echo -e "${redColour}[!]${endColour}${grayColour}Aborting${endColour}\n"
	exit 1
}

trap ctrl_c INT

# Functions


function helpPanel(){
	echo -e "\n${yellowColour}USAGE:${endColour}${grayColour}  grep [OPTION] [FILE]...\n${endColour}"
	echo -e "\t${greenColour}-n${endColour} print line number with output lines"
	echo -e "\t${greenColour}-l${endColour} print only names of FILEs with selected lines"
	echo -e "\t${greenColour}-i${endColour} ignore case distinctions in patterns and data"
	echo -e "\t${greenColour}-v${endColour} select non-matching lines"
	echo ""
}


function matchingLines(){
	declare -i line_counter=1
	declare -i word_found=0

	search_text=$1
	file=$2
	num_files=$3
	print_numbers=$4
	caseInsensitive=$5
	
	print_files=""

	if [ "$num_files" != "1" ]; then
		print_files="$file:"
	fi



	while read -r line; do

		let word_found=0
		for word in $line; do
			if [ "$caseInsensitive" == "1" ] && [[ "${line,,}" == *"${search_text,,}"* ]]; then
				let word_found=1
			elif [[ "$line" == *"$search_text"* ]]; then
				let word_found=1
			fi

		done
		if [ $word_found -eq 1 ]; then 
			echo -ne "${purpleColour}$print_files ${endColour}"
			if [ "$print_numbers" == "1" ]; then 
				echo -ne "${greenColour}$line_counter: ${endColour}"
			fi
			echo "$line"
		fi 
		let line_counter++
	done <"$file"
	
	echo ""
}


function textInFile(){
	text="$1"
	file="$2"
	declare -i bool=0
	
	while read -r line; do
		if [[ "$line" == *"$text"* ]]; then
			let bool=1	
			break
		fi
	done<"$file"

	echo "$bool"
}

function notMatchingLines(){
	search_text=$1
	file=$2
	num_files=$3

	

	if [ "$num_files" != "1" ]; then
		print_files="$file:"
	fi


	while read -r line; do

		let word_found=0
		for word in $line; do
			if [[ "$line" == *"$search_text"* ]]; then
				let word_found=1
			fi
		done

		echo -ne "${purpleColour}$print_files ${endColour}"
		
		if [ $word_found -ne 1 ]; then 
			echo "$line"
		fi 
	done <"$file"
	
	echo ""
}

declare -i parameter_counter=0

while getopts "n:l:i:v:x:h" arg; do 
	case $arg in 
		n) let parameter_counter+=1;;
		l) let parameter_counter+=2;;
		i) let parameter_counter+=3;;
		v) let parameter_counter+=4;;
		x) let parameter_counter+=5;;

	esac
done

text="$2"
file="$3"

echo ""

if [ $parameter_counter -eq 1 ]; then
	shift;shift

	for arg in "$@"; do
		ls "$arg" &>/dev/null
		
		if [ "$?" -ne 0 ] ; then
			echo -e "$0: $arg: No such file or directory\n"
		else
			matchingLines "$text" "$arg" "$#" "1" "0"
		fi
	done

elif [ $parameter_counter -eq 2 ]; then
	shift;shift
	for arg in "$@"; do
		ls "$arg" &>/dev/null

		if [ "$?" -ne 0 ] ; then
			echo -e "$arg: No such file or directory\n" 
		elif [ $(textInFile "$text" "$arg") -eq 1 ]; then
			echo -e "${purpleColour}$arg $endColour"
		fi
	done
elif [ $parameter_counter -eq 3 ]; then
	shift;shift

	for arg in "$@"; do
		ls "$arg" &>/dev/null
		
		if [ "$?" -ne 0 ] ; then
			echo -e "$0: $arg: No such file or directory\n"
		else
			matchingLines "$text" "$arg" "$#" "0" "1"
		fi
	done

elif [ $parameter_counter -eq 4 ]; then
	shift;shift

	for arg in "$@"; do
		ls "$arg" &>/dev/null
		
		if [ "$?" -ne 0 ] ; then
			echo -e "$0: $arg: No such file or directory\n"
		else
			notMatchingLines "$text" "$arg" "$#"
		fi
	done




else
	text="$1"
	file="$2"

	if [ -n "$text" ] && [ -n "$file" ]; then
		shift

		for arg in "$@"; do
			ls "$arg" &>/dev/null
			
			if [ "$?" -ne 0 ] ; then
				echo -e "$0: $arg: No such file or directory\n"
			else
				matchingLines "$text" "$arg" "$#" "0" "0"
			fi
		done	
	else
		helpPanel
	fi
fi

exit 0





