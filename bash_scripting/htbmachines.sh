#!/bin/bash


#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

function ctrl_c(){
	echo -e "[!]\t${redColour}Aborting!${endColour}\n"
	exit 1
}

#Ctrl + C

trap ctrl_c INT

# Global variables

main_url="https://htbmachines.github.io/bundle.js"


# Script functions


function helpPanel() {
    echo -e "\n${yellowColour}USAGE:${endColour}"
    echo -e "$0 [OPTIONS]...\n"
    echo -e "${yellowColour}OPTIONS:${endColour}"
    echo -e "\t${greenColour}-h${endColour}\tPrint help information"
    echo -e "\t${greenColour}-l${endColour}\tReturns the link to the resolution of the machine on YouTube"
    echo -e "\t${greenColour}-m${endColour}\tSearch by machine name"
    echo -e "\t${greenColour}-u${endColour}\tDownload or check updates for machine's file\n"
}

function checkDependencies(){
	dependencies=("js-beautify" "curl")
	for dependency in "${dependencies[@]}"; do 
		if ! command -v "$dependency" &>/dev/null; then 
			echo -e "${redColour}[ ERROR ]${endColour}\tDependency '$dependency' is not installed."
			exit 1
		fi
	done
}


function searchMachine(){
	machineName="$1"
	echo -e "${grayColour}Machine:${endColour} ${greenColour}$machineName${endColour}"
	cat bundle.js | awk "/name: \"$machineName\"/,/resuelta/" | grep -vE "name:|id:|sku:|resuelta:" | tr -d '"' | tr -d "," | sed 's/^ *//' | awk '{print toupper(substr($0, 1, 1)) substr($0,2)}'

	echo ""
}

function searchIP(){
	machineIP="$1"
	searchMachine $(cat bundle.js | grep "ip: \"$machineIP\"" -B 5 | grep "name:" | tr -d '"' | tr -d "," | awk 'NF{print $NF}') 
}


function getLink(){
	machineName="$1"
	link=$(cat bundle.js | awk "/name: \"$machineName\"/,/youtube:/" | tail -n 1 | tr -d '"' | tr -d "," | awk 'NF{print $NF}')
	
	if [ -z "$link" ]; then 
		echo -e "\nThere's no machine with name${greenColour} $machineName ${endColour}\n"
	else
		echo -e "Machine: ${greenColour}$machineName${endColour}"
		echo -e "Link: ${yellowColour}$link${endColour}"
	fi 
}

function updateFiles(){
	echo -e "${yellowColour}\nCheking updates...${endColour}"
	sleep 1	
	if [ -f bundle.js ]; then 
		
		tmp=$(mktemp -d)
		curl -s -X GET $main_url | js-beautify > $tmp/bundle.js 2>/dev/null
		
		if [ $? -eq 1 ]; then 
			echo -e "${redColour}[ ERROR ]\t${endColour} ${grayColour}curl or js-beauty failed!${endColour}\n"
   			echo -e "\nCheck your internet connection.\n"
			exit 1
		fi

		if [ $(md5sum bundle.js | awk '{print $1}') != $(md5sum $tmp/bundle.js | awk '{print $1}') ];then			
			echo -e "There's a new update available."
   			echo -e "${grayColour}Do you like to update?${endColour}${purpleColour}[yes/no]${endColour}"
			read response
   
			if [ "$response" = "yes" ]; then
				echo -e "${redColour}Updating files...${endColour}"
				mv $tmp/bundle.js ./bundle.js
			else
				echo "Stopping..."
			fi
		else
			echo -e "All files are up to date"
		fi
		
		rm -r $tmp 
	else 
		echo -e "\n${greenColour}[!]${endColour}\tFile doesn't exists. ${yellowColour}Downloading...${endColour}"
		curl -s -X GET $main_url | js-beautify > bundle.js 2>/dev/null
		echo -e "\n${yellowColour}[+]${endColour} ${grayColour}File donwloaded succesfully${endColour}"
	fi 
}


# Indicators

declare -i parameter_counter=0 

checkDependencies

while getopts "m:i:l:uh" arg; do 
	case $arg in
		m) machineName=$OPTARG; let parameter_counter+=1;;
		u) let parameter_counter+=2;;
		i) machineIP=$OPTARG; let parameter_counter+=3;;
		l) machineName=$OPTARG; let parameter_counter+=4;;
	esac
done

if [ $parameter_counter -eq 1 ];then
	searchMachine $machineName
elif [ $parameter_counter -eq 2 ];then
	updateFiles
elif [ $parameter_counter -eq 3 ];then 
	searchIP $machineIP
elif [ $parameter_counter -eq 4 ];then 
	getLink $machineName
else 
	helpPanel;
fi 

exit 0


